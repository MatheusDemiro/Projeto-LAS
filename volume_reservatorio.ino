#include "RTClib.h" //Biblioteca para manipulação do rtc data logger shield
#include <Ultrasonic.h>
#include <avr/pgmspace.h>
#include <SPI.h>
#include <SD.h>

#define ECHO 8
#define TRIG 7
#define ARRAY_SIZE 580

Ultrasonic ultrasonic(TRIG, ECHO); //Instância da biblioteca Ultrassonic

RTC_DS1307 rtc;

File arquivoLog;
File reservatorioLog;
const byte sd_pin = 10; //Acesso ao SD card
double volume;
unsigned int distancia;

//Array com os volumes pre-calculados
//495.241215690616, 494.227554640996, 493.213893591377, 492.200232541757, 491.186571492138, 490.172910442518, 489.159249392899, 488.145588343279, 487.131927293659, 486.11826624404, 485.10460519442, 484.090944144801, 483.077283095181, 482.063622045562, 481.049960995942, 480.036299946323, 479.022638896703, 478.008977847084, 476.995316797464, 475.981655747844, 474.967994698225, 473.954333648605, 472.940672598986, 471.927011549366, 470.913350499747, 469.899689450127, 468.886028400507, 467.872367350888, 466.858706301268, 465.845045251649, 464.831384202029, 463.81772315241, 462.80406210279, 461.790401053171, 460.776740003551, 459.763078953931, 458.749417904312, 457.735756854692, 456.722095805073, 455.708434755453, 454.694773705834, 453.681112656214, 452.667451606595, 451.653790556975, 450.640129507355, 449.626468457736, 448.612807408116, 447.599146358497, 446.585485308877, 445.571824259258, 444.558163209638, 443.544502160019, 442.530841110399, 441.517180060779, 440.50351901116, 439.48985796154, 438.476196911921, 437.462535862301, 436.448874812682, 435.435213763062, 434.421552713443, 433.407891663823, 432.394230614204, 431.380569564584, 430.366908514964, 429.353247465345, 428.339586415725, 427.325925366106, 426.312264316486, 425.298603266867, 424.284942217247, 423.271281167628, 422.257620118008, 421.243959068388, 420.230298018769, 419.216636969149, 418.20297591953, 417.18931486991, 416.175653820291, 415.161992770671, 414.148331721052, 413.134670671432, 412.121009621812, 411.107348572193, 410.093687522573, 409.080026472954, 408.066365423334, 407.052704373715, 406.039043324095, 405.025382274475, 404.011721224856, 402.998060175236, 401.984399125617, 400.970738075997, 399.957077026378, 398.943415976758, 397.929754927139, 396.916093877519, 395.902432827899, 394.88877177828, 393.87511072866, 392.861449679041, 391.847788629421, 390.834127579802, 389.820466530182, 388.806805480563, 387.793144430943, 386.779483381323, 385.765822331704, 384.752161282084, 383.738500232465, 382.724839182845, 381.711178133226, 380.697517083606, 379.683856033987, 378.670194984367, 377.656533934747, 376.642872885128, 375.629211835508, 374.615550785889, 373.601889736269, 372.58822868665, 371.57456763703, 370.560906587411, 369.547245537791, 368.533584488171, 367.519923438552, 366.506262388932, 365.492601339313, 364.478940289693, 363.465279240074, 362.451618190454, 361.437957140835, 360.424296091215, 359.410635041595, 358.396973991976, 357.383312942356, 356.369651892737, 355.355990843117, 354.342329793498, 353.328668743878, 352.315007694259, 351.301346644639, 350.287685595019, 349.2740245454, 348.26036349578, 347.246702446161, 346.233041396541, 345.219380346922, 344.205719297302, 343.192058247683, 342.178397198063, 341.164736148443, 340.151075098824, 339.137414049204, 338.123752999585, 337.110091949965, 336.096430900346, 335.082769850726, 334.069108801107, 333.24378623107, 332.418463661033, 331.593141090996, 330.767818520959, 329.942495950922, 329.117173380886, 328.291850810849, 327.466528240812, 326.641205670775, 325.815883100738, 324.990560530701, 324.165237960665, 323.339915390628, 322.514592820591, 321.689270250554, 320.863947680517, 320.03862511048, 319.213302540444, 318.387979970407, 317.56265740037, 316.737334830333, 315.912012260296, 315.086689690259, 314.261367120223, 313.436044550186, 312.610721980149, 311.785399410112, 310.960076840075, 310.134754270039, 309.309431700002, 308.484109129965, 307.658786559928, 306.833463989891, 306.008141419854, 305.182818849818, 304.357496279781, 303.532173709744, 302.706851139707, 301.88152856967, 301.056205999633, 300.230883429597, 299.40556085956, 298.580238289523, 297.754915719486, 296.929593149449, 296.104270579412, 295.278948009376, 294.453625439339, 293.628302869302, 292.802980299265, 291.977657729228, 291.152335159191, 290.327012589155, 289.501690019118, 288.676367449081, 287.851044879044, 287.025722309007, 286.200399738971, 285.375077168934, 284.549754598897, 283.72443202886, 282.899109458823, 282.073786888786, 281.24846431875, 280.423141748713, 279.597819178676, 278.772496608639, 277.947174038602, 277.121851468565, 276.296528898529, 275.471206328492, 274.645883758455, 273.820561188418, 272.995238618381, 272.169916048344, 271.344593478308, 270.519270908271, 269.693948338234, 268.868625768197, 268.04330319816, 267.217980628123, 266.392658058087, 265.56733548805, 264.742012918013, 263.916690347976, 263.091367777939, 262.266045207902, 261.440722637866, 260.615400067829, 259.790077497792, 258.964754927755, 258.139432357718, 257.314109787682, 256.488787217645, 255.663464647608, 254.838142077571, 254.012819507534, 253.187496937497, 252.362174367461, 251.536851797424, 250.711529227387, 249.88620665735, 249.060884087313, 248.235561517276, 247.41023894724, 246.584916377203, 245.759593807166, 244.934271237129, 244.108948667092, 243.283626097055, 242.458303527019, 241.632980956982, 240.807658386945, 239.982335816908, 239.157013246871, 238.331690676834, 237.506368106798, 236.681045536761, 235.855722966724, 235.030400396687, 234.20507782665, 233.379755256613, 232.554432686577, 231.72911011654, 230.903787546503, 230.078464976466, 229.253142406429, 228.427819836393, 227.602497266356, 226.777174696319, 225.951852126282, 225.126529556245, 224.301206986208, 223.475884416172, 222.650561846135, 221.825239276098, 220.999916706061, 220.174594136024, 219.349271565987, 218.523948995951, 217.698626425914, 216.873303855877, 216.04798128584, 215.222658715803, 214.397336145766, 213.57201357573, 212.746691005693, 211.921368435656, 211.096045865619, 210.270723295582, 209.445400725545, 208.620078155509, 207.794755585472, 206.969433015435, 206.144110445398, 205.318787875361, 204.493465305324, 203.668142735288, 202.842820165251, 202.017497595214, 201.192175025177, 200.36685245514, 199.541529885104, 198.716207315067, 197.89088474503, 197.065562174993, 196.240239604956, 195.414917034919, 194.589594464883, 193.764271894846, 192.938949324809, 192.113626754772, 191.288304184735, 190.462981614698, 189.637659044662, 188.812336474625, 187.987013904588, 187.161691334551, 186.336368764514, 185.511046194477, 184.685723624441, 183.860401054404, 183.035078484367, 182.20975591433, 181.384433344293, 180.559110774256, 179.73378820422, 178.908465634183, 178.083143064146, 177.257820494109, 176.432497924072, 175.607175354036, 174.781852783999, 173.956530213962, 173.131207643925, 172.305885073888, 171.480562503851, 170.655239933815, 169.829917363778, 169.004594793741, 168.179272223704, 167.353949653667, 166.52862708363, 165.703304513594, 164.877981943557, 164.05265937352, 163.227336803483, 162.402014233446, 161.576691663409, 160.751369093373, 159.926046523336, 159.100723953299, 158.275401383262, 157.450078813225, 156.624756243188, 155.799433673152, 154.974111103115, 154.148788533078, 153.323465963041, 152.498143393004, 151.672820822968, 150.847498252931, 150.022175682894, 149.196853112857, 148.37153054282, 147.546207972783, 146.720885402746, 145.89556283271, 145.070240262673, 144.244917692636, 143.419595122599, 142.594272552562, 141.768949982526, 140.943627412489, 140.118304842452, 139.292982272415, 138.467659702378, 137.642337132341, 136.817014562305, 135.991691992268, 135.166369422231, 134.341046852194, 133.515724282157, 132.69040171212, 131.865079142084, 131.039756572047, 130.21443400201, 129.389111431973, 128.563788861936, 127.7384662919, 126.913143721863, 126.087821151826, 125.262498581789, 124.437176011752, 123.611853441716, 122.786530871679, 121.961208301642, 121.135885731605, 120.310563161568, 119.485240591531, 118.738457837834, 117.991675084137, 117.24489233044, 116.498109576743, 115.751326823046, 115.004544069349, 114.257761315652, 113.510978561955, 112.764195808258, 112.017413054561, 111.270630300864, 110.523847547167, 109.77706479347, 109.030282039773, 108.283499286075, 107.536716532378, 106.789933778681, 106.043151024984, 105.296368271287, 104.54958551759, 103.802802763893, 103.056020010196, 102.309237256499, 101.562454502802, 100.815671749105, 100.068888995408, 99.3221062417106, 98.5753234880135, 97.8285407343165, 97.0817579806194, 96.3349752269223, 95.5881924732253, 94.8414097195282, 94.0946269658311, 93.3478442121341, 92.601061458437, 91.8542787047399, 91.1074959510429, 90.3607131973458, 89.6139304436487, 88.8671476899517, 88.1203649362546, 87.3735821825575, 86.6267994288605, 85.8800166751634, 85.1332339214663, 84.3864511677693, 83.6396684140722, 82.8928856603751, 82.1461029066781, 81.399320152981, 80.6525373992839, 79.9057546455869, 79.1589718918898, 78.4121891381927, 77.6654063844956, 76.9186236307986, 76.1718408771015, 75.4250581234044, 74.6782753697074, 73.9314926160103, 73.1847098623132, 72.4379271086162, 71.6911443549191, 70.944361601222, 70.197578847525, 69.4507960938279, 68.7040133401308, 67.9572305864338, 67.2104478327367, 66.4636650790396, 65.7168823253426, 64.9700995716455, 64.2233168179484, 63.4765340642513, 62.7297513105543, 61.9829685568572, 61.2361858031601, 60.489403049463, 59.742620295766, 58.9958375420689, 58.2490547883718, 57.5022720346747, 56.7554892809777, 56.0087065272806, 55.2619237735835, 54.5151410198864, 53.7683582661894, 53.0215755124923, 52.2747927587952, 51.5280100050981, 50.7812272514011, 50.034444497704, 49.2876617440069, 48.5408789903098, 47.7940962366128, 47.0473134829157, 46.3005307292186, 45.5537479755215, 44.8069652218245, 44.0601824681274, 43.3133997144303, 42.5666169607332, 41.8198342070362, 41.0730514533391, 40.326268699642, 39.5794859459449, 38.8327031922479, 38.0859204385508, 37.3391376848537, 36.5923549311566, 35.8455721774596, 35.0987894237625, 34.3520066700654, 33.6052239163683, 32.8584411626713, 32.1116584089742, 31.3648756552771, 30.61809290158, 29.871310147883, 29.1245273941859, 28.3777446404888, 27.6309618867917, 26.8841791330947, 26.1373963793976, 25.3906136257005, 24.6438308720034, 23.8970481183064, 23.1502653646093, 22.4034826109122, 21.6566998572151, 20.9099171035181, 20.163134349821, 19.4163515961239, 18.6695688424268, 17.9227860887298, 17.1760033350327, 16.4292205813356, 15.6824378276385, 14.9356550739415, 14.1888723202444, 13.4420895665473, 12.6953068128502, 11.9485240591532, 11.2017413054561, 10.454958551759, 9.70817579806195, 8.96139304436488, 8.2146102906678, 7.46782753697073, 6.72104478327366, 5.97426202957658, 5.22747927587951, 4.48069652218244, 3.73391376848537, 2.98713101478829, 2.24034826109122, 1.49356550739415, 0.746782753697073, 0
const uint16_t array_volume[ARRAY_SIZE] PROGMEM = {495, 494, 493, 492, 491, 490, 489, 488, 487, 486, 485, 484, 483, 482, 481, 480, 479, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 461, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445, 444, 443, 442, 441, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381, 380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 335, 334, 333, 332, 332, 331, 330, 329, 328, 327, 327, 326, 325, 324, 323, 323, 322, 321, 320, 319, 318, 318, 317, 316, 315, 314, 313, 313, 312, 311, 310, 309, 308, 308, 307, 306, 305, 304, 304, 303, 302, 301, 300, 299, 299, 298, 297, 296, 295, 294, 294, 293, 292, 291, 290, 290, 289, 288, 287, 286, 285, 285, 284, 283, 282, 281, 280, 280, 279, 278, 277, 276, 275, 275, 274, 273, 272, 271, 271, 270, 269, 268, 267, 266, 266, 265, 264, 263, 262, 261, 261, 260, 259, 258, 257, 256, 256, 255, 254, 253, 252, 252, 251, 250, 249, 248, 247, 247, 246, 245, 244, 243, 242, 242, 241, 240, 239, 238, 238, 237, 236, 235, 234, 233, 233, 232, 231, 230, 229, 228, 228, 227, 226, 225, 224, 223, 223, 222, 221, 220, 219, 219, 218, 217, 216, 215, 214, 214, 213, 212, 211, 210, 209, 209, 208, 207, 206, 205, 204, 204, 203, 202, 201, 200, 200, 199, 198, 197, 196, 195, 195, 194, 193, 192, 191, 190, 190, 189, 188, 187, 186, 186, 185, 184, 183, 182, 181, 181, 180, 179, 178, 177, 176, 176, 175, 174, 173, 172, 171, 171, 170, 169, 168, 167, 167, 166, 165, 164, 163, 162, 162, 161, 160, 159, 158, 157, 157, 156, 155, 154, 153, 152, 152, 151, 150, 149, 148, 148, 147, 146, 145, 144, 143, 143, 142, 141, 140, 139, 138, 138, 137, 136, 135, 134, 134, 133, 132, 131, 130, 129, 129, 128, 127, 126, 125, 124, 124, 123, 122, 121, 120, 119, 119, 118, 117, 116, 116, 115, 114, 114, 113, 112, 111, 111, 110, 109, 108, 108, 107, 106, 105, 105, 104, 103, 102, 102, 101, 100, 99, 99, 98, 97, 96, 96, 95, 94, 93, 93, 92, 91, 90, 90, 89, 88, 87, 87, 86, 85, 84, 84, 83, 82, 81, 81, 80, 79, 78, 78, 77, 76, 75, 75, 74, 73, 72, 72, 71, 70, 69, 69, 68, 67, 66, 66, 65, 64, 63, 63, 62, 61, 60, 60, 59, 58, 58, 57, 56, 55, 55, 54, 53, 52, 52, 51, 50, 49, 49, 48, 47, 46, 46, 45, 44, 43, 43, 42, 41, 40, 40, 39, 38, 37, 37, 36, 35, 34, 34, 33, 32, 31, 31, 30, 29, 28, 28, 27, 26, 25, 25, 24, 23, 22, 22, 21, 20, 19, 19, 18, 17, 16, 16, 15, 14, 13, 13, 12, 11, 10, 10, 9, 8, 7, 7, 6, 5, 4, 4, 3, 2, 1, 1, 0};

void setup()
{
  Serial.begin(115200);
  //Inicializando o cartao SD
  Serial.println("Inicializando cartão SD...");
  if (!SD.begin(sd_pin)){
    Serial.println("Falha na inicialização do cartão SD!\n");
    while (1); //fica aqui para sempre
  }
  Serial.println("Cartão SD inicializado com sucesso.");
  if (arquivoLog = SD.open("ini.txt", FILE_WRITE)){
    Serial.println("Arquivo encontrado.");
    arquivoLog.println("Cartão SD iniciado com sucesso.");
  } else{
    Serial.println("Arquivo 'inicializacao.txt' não encontrado.");
    while (1);
  }

  //Valida a inicializacao do RTC
  if (!rtc.begin()){
    arquivoLog.println("RTC não encontrado!");
    Serial.println("RTC não encontrado!");
    arquivoLog.close();
    while (1); //fica aqui para sempre
  }
  if (!rtc.isrunning()){
    arquivoLog.println("RTC não está funcionando!");
    Serial.println("RTC não está funcionando!");

    rtc.adjust(DateTime(F(__DATE__), F(__TIME__))); //Ajuste de data e hora na compilação, pela substituição das macros

    //A linha abaixo permite ajustar manualmente a data e hora do RTC
    //Formato: DateTime(ano, mes, dia, hora, minuto, segundo)
    //rtc.adjust(DateTime(2014, 1, 21, 3, 0, 0));
  }
  arquivoLog.close();
}

void loop(void)
{
  distancia = calcularDistancia(); //Distancia informada pelo sensor ultrassonico
  if (distancia > 0){
    delay(300000);//Atualizar para realizar cálculo de distância de 5 em 5 minutos
    volume = pgm_read_word_near(array_volume+distancia-1);
    Serial.println(volume);
    Serial.println(distancia);
    log("Volume calculado com sucesso!", volume, distancia);
  }
  else{
    log("Reservatório cheio.", volume, distancia);
  }
}

unsigned int calcularDistancia(void){
  return ultrasonic.distanceRead();
}

void log(char *msg, float volume, int distancia){
  Serial.println("Loggin..");
  if (reservatorioLog = SD.open("regv.txt", FILE_WRITE)){
    DateTime now = rtc.now();

    reservatorioLog.println();
    reservatorioLog.print(now.day(), DEC);
    reservatorioLog.print("/");
    reservatorioLog.print(now.month(), DEC);
    reservatorioLog.print("/");
    reservatorioLog.print(now.year(), DEC);
    reservatorioLog.print(" ");
    reservatorioLog.print(now.hour(), DEC);
    reservatorioLog.print(":");
    reservatorioLog.print(now.minute(), DEC);
    reservatorioLog.print(":");
    reservatorioLog.print(now.second(), DEC);
    reservatorioLog.print(" ");
    reservatorioLog.print("volume: ");
    reservatorioLog.print(volume);
    reservatorioLog.print(" ");
    reservatorioLog.print("distancia: ");
    reservatorioLog.print(distancia);
    reservatorioLog.close();
    Serial.println("Done.");
  }else{
    arquivoLog = SD.open("ini.txt", FILE_WRITE);
    arquivoLog.println("Erro ao abrir arquivo 'regv.txt'.");
    arquivoLog.close();
    Serial.println("Erro ao abrir arquivo 'regv.txt'.");
  }
}
